{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReverse","setIsReverse","NONE","sortBy","setSortBy","className","type","classNames","ALPHABET","onClick","LENGTH","currentValue","copyOfServerArr","sort","a","b","localeCompare","length","reverse","getSortedArr","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,uBAAAA,I,mBAAAA,I,gBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAASH,EAASM,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAuBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYJ,IAAWP,EAASY,WAEpCC,QAAS,kBAAML,EAAUR,EAASY,WANpC,iCAWA,wBACEF,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYJ,IAAWP,EAASc,SAEpCD,QAAS,kBAAML,EAAUR,EAASc,SANpC,4BAWA,wBACEJ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaP,IAEjBS,QAAS,kBAAMR,GAAa,SAAAU,GAAY,OAAKA,MAN/C,sBAYGX,GAAaG,IAAWP,EAASM,OAEhC,wBACEI,KAAK,SACLD,UAAU,4BACVI,QAAS,WACPR,GAAa,GACbG,EAAUR,EAASM,OALvB,sBAcN,6BACE,6BA3Ee,WACnB,IAAMU,EAAe,UAAOf,GAiB5B,OAfAe,EAAgBC,MAAK,SAACC,EAAWC,GAC/B,OAAQZ,GACN,KAAKP,EAASY,SACZ,OAAOM,EAAEE,cAAcD,GACzB,KAAKnB,EAASc,OACZ,OAAOI,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITjB,GACFY,EAAgBM,UAGXN,EA2DCO,GAAeC,KAAI,SAAAC,GAAO,OACxB,oBAAI,UAAQ,OAAZ,SAAkCA,GAAVA,cCvGtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d1d9ecfa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET,\n  LENGTH,\n  NONE,\n}\n\nexport const App: React.FC = () => {\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n\n  const getSortedArr = (): string[] => {\n    const copyOfServerArr = [...goodsFromServer];\n\n    copyOfServerArr.sort((a: string, b: string): number => {\n      switch (sortBy) {\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReverse) {\n      copyOfServerArr.reverse();\n    }\n\n    return copyOfServerArr;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortBy !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortBy(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortBy !== SortType.LENGTH },\n          )}\n          onClick={() => setSortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={() => setIsReverse(currentValue => !currentValue)}\n        >\n          Reverse\n        </button>\n\n        {\n          (isReverse || sortBy !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setIsReverse(false);\n                setSortBy(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {\n            getSortedArr().map(product => (\n              <li data-cy=\"Good\" key={product}>{product}</li>\n            ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}